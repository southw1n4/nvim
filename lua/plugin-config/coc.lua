--
--inoremap <silent><expr> <TAB>
--      \ pumvisible() ? "\<C-n>" :
--      \ <SID>check_back_space() ? "\<TAB>" :
--      \ coc#refresh()
--inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
--
--function! s:check_back_space() abort
--  let col = col('.') - 1
--  return !col || getline('.')[col - 1]  =~# '\s'
--endfunction
--
--if has('nvim')
--  inoremap <silent><expr> <c-space> coc#refresh()
--else
--  inoremap <silent><expr> <c-@> coc#refresh()
--endif
--
--inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
--                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
--
--nmap <silent> [g <Plug>(coc-diagnostic-prev)
--nmap <silent> ]g <Plug>(coc-diagnostic-next)
--
--nmap <silent> gd <Plug>(coc-definition)
--nmap <silent> gy <Plug>(coc-type-definition)
--nmap <silent> gi <Plug>(coc-implementation)
--nmap <silent> gr <Plug>(coc-references)
--
--nnoremap <silent> K :call <SID>show_documentation()<CR>

